CREATE OR REPLACE PROCEDURE IMPORTFROMXMLFILE (
  filename in varchar2
)
is
XML_FILE BFILE;
CLOB_DATA CLOB;
XML_DATA XMLTYPE;

COUNT_INSERTED INTEGER := 0;

TYPE REC_SONG IS RECORD (
        URI VARCHAR2(100),
        XML_ELEMENT XMLTYPE
    );
 
TYPE TYPE_SONGLIST IS TABLE OF REC_SONG;
l_song_list type_songlist;

l_dest_offset   INTEGER := 1;
l_src_offset    INTEGER := 1;
l_bfile_csid    NUMBER  := 0;
L_LANG_CONTEXT  INTEGER := 0;
L_WARNING       INTEGER := 0;
  
BEGIN
XML_FILE := BFILENAME ('XML_DIR', FILENAME);
DBMS_LOB.createtemporary (clob_data, TRUE, DBMS_LOB.SESSION);
DBMS_LOB.FILEOPEN (XML_FILE, DBMS_LOB.FILE_READONLY);

DBMS_LOB.LOADCLOBFROMFILE (
    DEST_LOB      => CLOB_DATA,
    src_bfile     => xml_file,
    AMOUNT        => DBMS_LOB.LOBMAXSIZE,
    DEST_OFFSET   => L_DEST_OFFSET,
    SRC_OFFSET    => L_SRC_OFFSET,
    BFILE_CSID    => L_BFILE_CSID,
    LANG_CONTEXT  => L_LANG_CONTEXT,
    WARNING       => L_WARNING);
    
DBMS_LOB.fileclose (xml_file);

XML_DATA := XMLTYPE.CREATEXML(CLOB_DATA);

SELECT XML_LIST.EXTRACT('//SpotifyURI').getStringVal() AS URI,
       XML_LIST.EXTRACT('//song') AS XML_ELEMENT
BULK COLLECT
INTO L_SONG_LIST
FROM TABLE(XMLSEQUENCE(EXTRACT(XML_DATA, '/playlist/song'))) XML_LIST;
IF l_song_list.COUNT > 0 THEN

    FOR I IN L_SONG_LIST.FIRST..L_SONG_LIST.LAST LOOP
        IF TRY_INSERT_SONG(L_SONG_LIST(I).URI, L_SONG_LIST(I).XML_ELEMENT) = 1 THEN
          COUNT_INSERTED := COUNT_INSERTED + 1;
        end if;
    END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('Total inserted: ' || count_inserted);
END IF;

END;

execute importfromxmlfile('vinacar.xml');

CREATE OR REPLACE FUNCTION TRY_INSERT_SONG (
  URI IN VARCHAR2,
  XML_ELEM XMLTYPE
  ) RETURN INTEGER
  is
  
  BEGIN
    INSERT INTO SONGS VALUES (ID_SEQ.NEXTVAL, URI, XML_ELEM);
    IF SQL%ROWCOUNT > 0 THEN
      RETURN 1;
    end if;
    EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        RETURN 0;
  END;
  
